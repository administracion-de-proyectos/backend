// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/course/": {
            "get": {
                "description": "Get all courses that follows a criteria",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Course request"
                ],
                "summary": "Get all courses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Title string for which you want to look",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ownerEmail string for which you want to look",
                        "name": "ownerEmail",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "category string for which you want to look",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Age of the course you want to retrieve",
                        "name": "desiredAge",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.CourseStateResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Create course using the token as a way to add account to course owner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Course request"
                ],
                "summary": "Create course",
                "parameters": [
                    {
                        "description": "Title and Category are required",
                        "name": "course",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.CourseRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "token required for request",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.CourseState"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/course/subscribe/": {
            "get": {
                "description": "Get all courses in which the user has subscribed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscription"
                ],
                "summary": "Get subscribed courses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token required for request",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.CourseStateResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/course/subscribe/{id}": {
            "post": {
                "description": "Subscribe a user given by its token to a course",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscription"
                ],
                "summary": "Subscribe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "course in which the current user wants to subscribe",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token required for request",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "Object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/course/{id}": {
            "get": {
                "description": "Fetch a course with a given id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Course request"
                ],
                "summary": "Fetch a course",
                "parameters": [
                    {
                        "type": "string",
                        "description": "course id which you look for",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token required for request",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.CourseState"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Create class for a previously created course, if course does not exist this endpoint will fail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Course request"
                ],
                "summary": "Create class for created course",
                "parameters": [
                    {
                        "description": "Title is required",
                        "name": "class",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.Class"
                        }
                    },
                    {
                        "type": "string",
                        "description": "course id which you want to add a course",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.CourseState"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/course/{id}/{classId}": {
            "get": {
                "description": "Get class with id and class id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Course request"
                ],
                "summary": "Fetch a class",
                "parameters": [
                    {
                        "type": "string",
                        "description": "class id you want to fetch",
                        "name": "classId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "course id which you look for",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Class"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes a class",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Course request"
                ],
                "summary": "Remove class created",
                "parameters": [
                    {
                        "type": "string",
                        "description": "class id you want to remove",
                        "name": "classId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "course id which you look for",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/user/login/": {
            "post": {
                "description": "SignInUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User request"
                ],
                "summary": "SignIn User",
                "parameters": [
                    {
                        "description": "Email and Password are required",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Token"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/user/profile/{id}": {
            "get": {
                "description": "Get User profile with token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User request"
                ],
                "summary": "Get User Profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token required for request",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorMsg"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update User Profile",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User request"
                ],
                "summary": "Update User Profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Profile and Name are updatable",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/user/signUp/": {
            "post": {
                "description": "Create User Account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User request"
                ],
                "summary": "Sign Up User",
                "parameters": [
                    {
                        "description": "User required Data to SignUp",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Token"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorMsg"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.Class": {
            "type": "object",
            "properties": {
                "course_title": {
                    "type": "string"
                },
                "metadata": {},
                "title": {
                    "type": "string"
                }
            }
        },
        "controller.CourseRequest": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "classes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.Class"
                    }
                },
                "is_school_oriented": {
                    "type": "boolean"
                },
                "max_age": {
                    "type": "integer"
                },
                "metadata": {},
                "min_age": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "controller.CourseState": {
            "type": "object",
            "properties": {
                "age_filtered": {
                    "type": "boolean"
                },
                "category": {
                    "type": "string"
                },
                "classes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "courseTitle": {
                    "type": "string"
                },
                "creatorEmail": {
                    "type": "string"
                },
                "isSchoolOriented": {
                    "type": "boolean"
                },
                "isSubscribed": {
                    "type": "boolean"
                },
                "max_age": {
                    "type": "integer"
                },
                "metadata": {},
                "min_age": {
                    "type": "integer"
                }
            }
        },
        "controller.CourseStateResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "courses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.CourseState"
                    }
                }
            }
        },
        "controller.ErrorMsg": {
            "type": "object",
            "properties": {
                "reason": {
                    "type": "string",
                    "example": "mensaje de error"
                }
            }
        },
        "controller.Token": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "asdasfasd"
                }
            }
        },
        "controller.UserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "metadata": {},
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "profile": {
                    "type": "string"
                }
            }
        },
        "controller.UserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "metadata": {},
                "name": {
                    "type": "string"
                },
                "profile": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
